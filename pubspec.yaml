name: dogshield_ai
description: "AI-driven mobile app for pet health management and rabies detection in dogs."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  # State Management
  provider: ^6.1.1
  flutter_bloc:
    ^8.1.3
    # Firebase - using compatible versions
  firebase_core: ^3.15.1
  firebase_auth: ^5.0.0
  cloud_firestore: ^5.0.0
  firebase_storage: ^12.0.0
  firebase_app_check: ^0.3.0
  firebase_ai: ^2.2.1 # Or the latest version
  video_player: ^2.10.0
  google_sign_in: ^6.2.1
  # Removing firebase_messaging as it's causing compatibility issues
  # firebase_messaging: ^14.7.17

  # UI Components
  flutter_svg: ^2.0.9
  google_fonts: ^6.1.0
  cached_network_image: ^3.3.1
  lottie:
    ^3.0.0
    # Utils
  intl: ^0.19.0
  shared_preferences: ^2.2.2
  image_picker: ^1.0.7
  path_provider: ^2.1.2
  permission_handler: ^11.2.0
  html: ^0.15.4
  http: ^1.2.0

  # ML/AI
  # tflite_flutter: ^0.10.4
  camera: ^0.10.5+9
  # google_mlkit_image_labeling: ^0.10.0

  # Calendar & Reminders
  table_calendar: ^3.0.9
  timezone: ^0.9.2
  flutter_local_notifications: ^17.2.0

  # Utils - Database
  uuid: ^4.3.3

dev_dependencies:
  flutter_launcher_icons: "^0.13.1"
  flutter_test:
    sdk: flutter

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/download.jpeg" # Path to your app icon

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  build_runner: ^2.4.8
  mockito: ^5.4.4

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/animations/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package
